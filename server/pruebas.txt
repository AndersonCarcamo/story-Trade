1. Crear un nuevo usuario
Endpoint: POST /users
URL: http://localhost:5000/users
Headers:

Content-Type: application/json
Body:

json
Copiar código
{
    "name": "John Doe",
    "username": "johndoe",
    "email": "johndoe@example.com",
    "password": "password123",
    "phone": "1234567890",
    "age": 30,
    "avatar": "avatar1.png"
}
2. Obtener todos los usuarios
Endpoint: GET /users
URL: http://localhost:5000/users
Headers:

Content-Type: application/json
Response: Debe devolver una lista de usuarios en formato JSON.

3. Crear un nuevo libro y asignarlo a un usuario
Endpoint: POST /users/{user_id}/books
URL: http://localhost:5000/users/1/books
Headers:

Content-Type: application/json
Body:

json
Copiar código
{
    "title": "New Book Title",
    "author": "New Book Author",
    "description": "This is a new book description.",
    "image": "newbook.jpg",
    "category": "Fantasía",
    "rating": 4.5,
    "release_year": "2021",
    "antiquity": "2022",
    "editorial": "Editorial New",
    "video": "newvideo.mp4"
}
4. Buscar libros por un término
Endpoint: GET /search
URL: http://localhost:5000/search?query=fantasia
Headers:

Content-Type: application/json
Response: Debe devolver una lista de libros que coincidan con el término de búsqueda en formato JSON.

5. Agregar un género a un usuario
Endpoint: POST /users/{user_id}/genres
URL: http://localhost:5000/users/1/genres
Headers:

Content-Type: application/json
Body:

json
Copiar código
{
    "genre": "Ciencia Ficción"
}
6. Darle like a un libro
Endpoint: POST /likes
URL: http://localhost:5000/likes
Headers:

Content-Type: application/json
Body:

json
Copiar código
{
    "user_id": 1,
    "book_id": 1,
    "liker_id": 2
}
7. Obtener notificaciones de un usuario
Endpoint: GET /notifications/{user_id}
URL: http://localhost:5000/notifications/1
Headers:

Content-Type: application/json
Response: Debe devolver una lista de notificaciones en formato JSON.

8. Marcar una notificación como leída
Endpoint: PUT /notifications/{notification_id}
URL: http://localhost:5000/notifications/1
Headers:

Content-Type: application/json
Body:

json
Copiar código
{
    "is_read": true
}
9. Obtener todos los libros
Endpoint: GET /books
URL: http://localhost:5000/books
Headers:

Content-Type: application/json
Response: Debe devolver una lista de libros en formato JSON.

10. Actualizar un libro
Endpoint: PUT /books/{book_id}
URL: http://localhost:5000/books/1
Headers:

Content-Type: application/json
Body:

json
Copiar código
{
    "antiquity": "2023",
    "editorial": "Editorial Updated",
    "video": "updatedvideo.mp4"
}
11. Eliminar un libro
Endpoint: DELETE /books/{book_id}
URL: http://localhost:5000/books/1
Headers:

Content-Type: application/json
Response: Debe devolver un objeto JSON indicando el éxito de la operación.

12. Obtener las opciones de pago
Endpoint: GET /payment-options
URL: http://localhost:5000/payment-options
Headers:

Content-Type: application/json
Response: Debe devolver una lista de opciones de pago en formato JSON.

Estas pruebas deben cubrir la funcionalidad principal de tu API y te permitirán verificar que todo esté funcionando correctamente. Asegúrate de reemplazar {user_id} y {book_id} con los valores correctos de los recursos que deseas probar.






